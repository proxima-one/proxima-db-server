/**
 * Proxima DB API
 * Documentation for the http/https server for Proxima Database
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DIDAuthentication model module.
 * @module model/DIDAuthentication
 * @version 1.0.3
 */
class DIDAuthentication {
    /**
     * Constructs a new <code>DIDAuthentication</code>.
     * @alias module:model/DIDAuthentication
     */
    constructor() { 
        
        DIDAuthentication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DIDAuthentication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DIDAuthentication} obj Optional instance to populate.
     * @return {module:model/DIDAuthentication} The populated <code>DIDAuthentication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DIDAuthentication();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('controller')) {
                obj['controller'] = ApiClient.convertToType(data['controller'], 'String');
            }
            if (data.hasOwnProperty('publicKeyMultibase')) {
                obj['publicKeyMultibase'] = ApiClient.convertToType(data['publicKeyMultibase'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
DIDAuthentication.prototype['id'] = undefined;

/**
 * @member {String} type
 */
DIDAuthentication.prototype['type'] = undefined;

/**
 * @member {String} controller
 */
DIDAuthentication.prototype['controller'] = undefined;

/**
 * @member {String} publicKeyMultibase
 */
DIDAuthentication.prototype['publicKeyMultibase'] = undefined;






export default DIDAuthentication;

