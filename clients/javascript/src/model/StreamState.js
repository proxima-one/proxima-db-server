/**
 * Proxima DB API
 * Documentation for the http/https server for Proxima Database
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StreamState model module.
 * @module model/StreamState
 * @version 1.0.3
 */
class StreamState {
    /**
     * Constructs a new <code>StreamState</code>.
     * @alias module:model/StreamState
     */
    constructor() { 
        
        StreamState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StreamState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamState} obj Optional instance to populate.
     * @return {module:model/StreamState} The populated <code>StreamState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamState();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('controllers')) {
                obj['controllers'] = ApiClient.convertToType(data['controllers'], ['String']);
            }
            if (data.hasOwnProperty('latest_commit')) {
                obj['latest_commit'] = ApiClient.convertToType(data['latest_commit'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} version
 */
StreamState.prototype['version'] = undefined;

/**
 * @member {Array.<String>} controllers
 */
StreamState.prototype['controllers'] = undefined;

/**
 * @member {String} latest_commit
 */
StreamState.prototype['latest_commit'] = undefined;

/**
 * @member {String} schema
 */
StreamState.prototype['schema'] = undefined;

/**
 * @member {Number} offset
 */
StreamState.prototype['offset'] = undefined;






export default StreamState;

